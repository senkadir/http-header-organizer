# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  project: '**/Http.Header.Organizer.csproj'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: $(Project)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: $(Project)
    arguments: '--configuration $(BuildConfiguration) --no-restore'
    workingDirectory: src

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: false
    projects: $(Project)
    arguments: '-c $(BuildConfiguration) -o $(Build.StagingDirectory)  --no-build'
    workingDirectory: src

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: '$(Build.BuildNumber)'
  condition: succeededOrFailed()

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    nobuild: true
    includesymbols: false
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: 'push to nuget'
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'nuget.http.header.organizer.connection'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
  continueOnError: false